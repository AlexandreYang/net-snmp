UCD-SNMP-MIB DEFINITIONS ::= BEGIN

--
--  Change as necessary
--

IMPORTS
        enterprises, OBJECT-TYPE 				
	    FROM SNMPv2-SMI
	DisplayString 				
	    FROM SNMPv2-TC
	Integer32
            FROM SNMPv2-SMI;

-- numerical definitions:
-- 
ucdavis           OBJECT IDENTIFIER ::= { enterprises 2021 }

-- Local tables:
--   memory         OBJECT IDENTIFIER ::= { ucdavis 4 }
--   vmstat         OBJECT IDENTIFIER ::= { ucdavis 8 }
--   procTable      OBJECT IDENTIFIER ::= { ucdavis 11 }
--   execTable      OBJECT IDENTIFIER ::= { ucdavis 12 }
--   diskTable      OBJECT IDENTIFIER ::= { ucdavis 13 }
--   loadTable      OBJECT IDENTIFIER ::= { ucdavis 14 }
--   version        OBJECT IDENTIFIER ::= { ucdavis 100 }
--   snmperrs       OBJECT IDENTIFIER ::= { ucdavis 101 }
--   mibRegistryTable    OBJECT IDENTIFIER ::= { ucdavis 102 }

-- Older mib table entries that were changed to new locations above:
--   processes      OBJECT IDENTIFIER ::= { ucdavis 1 }
--   exec           OBJECT IDENTIFIER ::= { ucdavis 3 }
--   disk           OBJECT IDENTIFIER ::= { ucdavis 6 }
--   load           OBJECT IDENTIFIER ::= { ucdavis 7 }

-- Never implemented and removed from the mib:
--   lockd           OBJECT IDENTIFIER ::= { ucdavis 5 }


-- These are the returned values of the agent type.
-- returned to:  .iso.org.dod.internet.mgmt.mib-2.system.sysObjectID.0 

ucdSnmpAgent      OBJECT IDENTIFIER ::= { ucdavis 250 }
hpux9             OBJECT IDENTIFIER ::= { ucdSnmpAgent 1 }
hpux10            OBJECT IDENTIFIER ::= { ucdSnmpAgent 6 }
sunos4            OBJECT IDENTIFIER ::= { ucdSnmpAgent 2 }
solaris           OBJECT IDENTIFIER ::= { ucdSnmpAgent 3 }
osf               OBJECT IDENTIFIER ::= { ucdSnmpAgent 4 }
ultrix            OBJECT IDENTIFIER ::= { ucdSnmpAgent 5 }
netbsd1           OBJECT IDENTIFIER ::= { ucdSnmpAgent 7 }
freebsd           OBJECT IDENTIFIER ::= { ucdSnmpAgent 8 }
irix              OBJECT IDENTIFIER ::= { ucdSnmpAgent 9 }
linux             OBJECT IDENTIFIER ::= { ucdSnmpAgent 10 }
bsdi              OBJECT IDENTIFIER ::= { ucdSnmpAgent 11 }
openbsd           OBJECT IDENTIFIER ::= { ucdSnmpAgent 12 }
unknown           OBJECT IDENTIFIER ::= { ucdSnmpAgent 255 }


PRIndex ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
	"A unique value, greater than zero, for each OID registered in 
	the agent's processes table"
    SYNTAX INTEGER

procTable OBJECT-TYPE
	SYNTAX SEQUENCE OF prEntry
	ACCESS not-accessible
	STATUS current
	DESCRIPTION
		"A set of information on running programs/daemons."
	::= { ucdavis 11 }

prEntry OBJECT-TYPE
    SYNTAX     PREntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "An entry containing a process and its statistics."
    INDEX      { prIndex }
    ::= { procTable  1 }


PREntry ::= SEQUENCE {
   prIndex  PRIndex,
   prNames  DisplayString,
   prMin    INTEGER,
   prMax    INTEGER,
   prCount  INTEGER,
   prErrorFlag  INTEGER,
   prErrMessage  DisplayString,
   prErrFix  INTEGER
}

prIndex OBJECT-TYPE
	SYNTAX PRIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Reference Index for each observed process."
	::= { prEntry 1 }

prNames OBJECT-TYPE
	SYNTAX DisplayString  (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The table of process names we're Counting."
	::= { prEntry 2 }

prMin OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The minimum number of processes that should be
		running.  An error flag is generated if the number of
		running processes is < the minimum."
	::= { prEntry 3 }

prMax OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The maximum number of processes that should be
		running.  An error flag is generated if the number of
		running processes is > the maximum."
	::= { prEntry 4 }

prCount OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of current processes running with the name
		in question."
	::= { prEntry 5 }

prErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"A Error flag to indicate trouble with a process.  It
		goes to 1 if there is an error, 0 if no error."
	::= { prEntry 100 }

prErrMessage OBJECT-TYPE
	SYNTAX DisplayString  (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"An error message describing the problem (if one exists)."
	::= { prEntry 101 }

prErrFix OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Setting this to one will try to fix the problem if possible."
	::= { prEntry 102 }

ExtIndex ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
	"A unique value, greater than zero, for each OID registered in 
	the agent's extensible table"
    SYNTAX INTEGER

extTable OBJECT-TYPE
	SYNTAX SEQUENCE OF extEntry
	ACCESS not-accessible
	STATUS current
	DESCRIPTION
		"A table of extensible commands returning output and
		 result codes."
	INDEX { extIndex }
	::= { ucdavis 12 }

extEntry OBJECT-TYPE
    SYNTAX     ExtEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "An entry containing an extensible script and its output."
    INDEX      { extIndex }
    ::= { extTable  1 }

ExtEntry ::= SEQUENCE {
   extIndex   ExtIndex,
   extNames   DisplayString,
   extCommand DisplayString,
   extResult  INTEGER,
   extOutput  DisplayString,
   extErrFix  INTEGER
}

extIndex OBJECT-TYPE
	SYNTAX ExtIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Reference Index for extensible calls."
	::= { extEntry 1 }

extNames OBJECT-TYPE
	SYNTAX DisplayString  (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Short, one name descriptions of the extensible commands."
	::= { extEntry 2 }

extCommand OBJECT-TYPE
	SYNTAX DisplayString  (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The command line to be executed."
	::= { extEntry 3 }

extResult OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The result code from the executed command."
	::= { extEntry 100 }

extOutput OBJECT-TYPE
	SYNTAX DisplayString (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The output of the extensible command (top line only)."
	::= { extEntry 101 }

extErrFix OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-write
	STATUS mandatory
	DESCRIPTION
		"Set to 1 to fix the problem, if possible."
	::= { extEntry 102 }
	
memory OBJECT-TYPE
	SYNTAX Memory
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"Miscellanous stuff -- memory related."
	::= { ucdavis 4 }

Memory ::= SEQUENCE {
   memIndex        INTEGER,
   memErrorName    DisplayString,
   memTotalSwap     INTEGER,
   memAvailSwap     INTEGER,
   memTotalReal     INTEGER,
   memAvailReal     INTEGER,
   memTotalSwapTXT     INTEGER,
   memAvailSwapTXT     INTEGER,
   memTotalRealTXT     INTEGER,
   memAvailRealTXT     INTEGER,
   memTotalFree       INTEGER,
   memMinimumSwap       INTEGER,
   memSwapError       DisplayString,
   memShared          INTEGER,
   memBuffer          INTEGER,
   memCached          INTEGER
}

memIndex OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Generic Index."
     ::= { memory 1 } 

memErrorName OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Bogus Name (swap) for consistancy with the rest of the mibs."
     ::= { memory 2 } 

memTotalSwap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Swap Size."
	::= { memory 3 }

memAvailSwap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Available Swap Space."
	::= { memory 4 }

memTotalReal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Real/Physical Memory Size."
	::= { memory 5 }

memAvailReal OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Available Real/Physical Memory Space."
	::= { memory 6 }

memTotalSwapTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total VM used by text."
	::= { memory 7 }

memAvailSwapTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Active VM used by text."
	::= { memory 8 }

memTotalRealTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Real/Physical Memory Size used by txt."
	::= { memory 9 }

memAvailRealTXT OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Active Real/Physical Memory Space used by txt."
	::= { memory 10 }

memTotalFree OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Available Memory"
	::= { memory 11 }

memMinimumSwap OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Minimum amount of free swap.  Otherwise memErrorSwap
		is set to 1 "
	::= { memory 12 }

memShared OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Shared Memory"
	::= { memory 13 }

memBuffer OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Buffered Memory"
	::= { memory 14 }

memCached OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Total Cached Memory"
	::= { memory 15 }

memSwapError OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Error flag.  1 indicates very little swap space left"
	::= { memory 100 }
	
memSwapErrorMsg OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Error message describing the errorflag condition"
     ::= { memory 101 } 

DiskIndex ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
	"A unique value, greater than zero, for each OID registered in 
	the agent's disk table"
    SYNTAX INTEGER

diskTable	OBJECT-TYPE
	SYNTAX SEQUENCE OF diskEntry
	ACCESS not-accessible
	STATUS current
	DESCRIPTION
		"Disk watching information."
	::= { ucdavis 13 }

diskEntry OBJECT-TYPE
    SYNTAX     DiskEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "An entry containing a disk and its statistics."
    INDEX      { diskIndex }
    ::= { diskTable  1 }

DiskEntry ::= SEQUENCE {
   diskIndex   DiskIndex,
   diskPath  DisplayString,
   diskDevice  DisplayString,
   diskMinimum  INTEGER,
   diskMinPercent  INTEGER,
   diskTotal  INTEGER,
   diskAvail  INTEGER,
   diskUsed  INTEGER,
   diskPercent  INTEGER,
   diskErrorFlag  INTEGER,
   diskErrorMsg  DisplayString
}

dskIndex OBJECT-TYPE
	SYNTAX DiskIndex
	ACCESS read-only
	STATUS current
	DESCRIPTION
		"Reference number for the Disk Mib."
	::= { diskEntry 1 }
	
dskPath OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Path where disk is mounted."
     ::= { diskEntry 2 } 

dskDevice OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Device path"
     ::= { diskEntry 3 } 

dskMinimum OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Minimum space required on the disk."
     ::= { diskEntry 4 } 

dskMinPercent OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Minimum percentage of space required on the disk."
     ::= { diskEntry 5 } 

dskTotal OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Total Disk Size (kbytes)"
     ::= { diskEntry 6 } 

dskAvail OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Available disk Space"
     ::= { diskEntry 7 } 

dskUsed OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Used Space on Disk"
     ::= { diskEntry 8 } 

dskPercent OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Percentage of space used on disk"
     ::= { diskEntry 9 } 

dskErrorFlag OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Error flag signaling disk is over minimum required space"
     ::= { diskEntry 100 } 
     
dskErrorMsg OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "A text description of what caused the error flag to be set."
     ::= { diskEntry 101 } 
     
LoadIndex ::= TEXTUAL-CONVENTION
    STATUS       current
    DESCRIPTION
	"A unique value, greater than zero, for each load average
	registered in the agent's load average table"
    SYNTAX INTEGER

loadTable OBJECT-TYPE
	SYNTAX SEQUENCE OF loadEntry
	ACCESS not-accessible
	STATUS current
	DESCRIPTION
		"Load average information."
	::= { ucdavis 14 }

loadEntry OBJECT-TYPE
    SYNTAX     LoadEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "An entry containing a load average and its values."
    INDEX      { loadIndex }
    ::= { loadTable  1 }

LoadTable ::= SEQUENCE {
   loadaveIndex  LoadIndex,
   loadaveNames  DisplayString,
   loadaveLoad   DisplayString,
   loadaveConfig DisplayString,
   loadaveErrorFlag  INTEGER,
   loadaveErrMessage  DisplayString
}

laIndex OBJECT-TYPE
	SYNTAX LoadIndex
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Reference Index for each observed loadave."
	::= { loadEntry 1 }

laNames OBJECT-TYPE
	SYNTAX DisplayString (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The list of loadave names we're Counting."
	::= { loadEntry 2 }

laLoad OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The 1,5 and 10 minute load averages."
	::= { loadEntry 3 }

laConfig OBJECT-TYPE
	SYNTAX DisplayString
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The watch point for loadaverages to signal an error."
	::= { loadEntry 4 }

laErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"A Error flag to indicate trouble with a loadave.  It
		goes to 1 if there is an error, 0 if no error."
	::= { loadEntry 100 }

laErrMessage OBJECT-TYPE
	SYNTAX DisplayString (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"An error message describing the problem (if one exists)."
	::= { loadEntry 101 }

vmstat OBJECT-TYPE
	SYNTAX Vmstat
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"Paging, block IO and cpu information."
	INDEX { vmstatIndex }
	::= { ucdavis 8 }


Vmstat ::= SEQUENCE {
   vmstatIndex  INTEGER,
   vmstatErrorName  DisplayString,
   vmstatSwapin  INTEGER,
   vmstatSwapout  INTEGER,
   vmstatIosent  INTEGER,
   vmstatIoreceive  INTEGER,
   vmstatsysinterrupts  INTEGER,
   vmstatsyscontext  INTEGER,
   vmstatcpuuser  INTEGER,
   vmstatcpusystem  INTEGER,
   vmstatcpuidle  INTEGER,
   vmstatErrorFlag  INTEGER,
   vmstatErrMessage  DisplayString
}

vmstatIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Reference Index for each observed vmstat."
	::= { vmstat 1 }

vmstatErrorName OBJECT-TYPE
	SYNTAX DisplayString (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The list of vmstat names we're Counting."
	::= { vmstat 2 }

vmstatSwapin OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Amount of memory swapped in from disk (kB/s)."
	::= { vmstat 3 }

vmstatSwapout OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Amount of memory swapped to disk (kB/s)."
	::= { vmstat 4 }

vmstatIosent OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Blocks sent to a block device (blocks/s)."
	::= { vmstat 5 }

vmstatIoreceive OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Blocks received from a block device (blocks/s)."
	::= { vmstat 6 }

vmstatsysinterrupts OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of interrupts per second, including the clock."
	::= { vmstat 7 }

vmstatsyscontext OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"The number of context switches per second."
	::= { vmstat 8 }

vmstatcpuuser OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"percentages of user CPU time."
	::= { vmstat 9 }

vmstatcpusystem OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"percentages of system CPU time."
	::= { vmstat 10 }

vmstatcpuidle OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"percentages of idle CPU time."
	::= { vmstat 11 }

vmstatErrorFlag OBJECT-TYPE
        SYNTAX INTEGER
        ACCESS read-only
        STATUS mandatory
        DESCRIPTION
                "Error flag."
        ::= { vmstat 100 }

vmstatErrMessage OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Error message describing the errorflag condition"
     ::= { vmstat 101 } 


version	OBJECT-TYPE
	SYNTAX Version
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"ece-snmpd version info."
	INDEX { versionIndex }
	::= { ucdavis 100 }

Version ::= SEQUENCE {
   versionIndex   INTEGER,
   versionTag  DisplayString,
   versionDate  DisplayString,
   versionCDate  DisplayString,
   versionIdent  DisplayString,
   versionClearCache  INTEGER,
   versionUpdateConfig  INTEGER,
   versionDoDebugging  INTEGER
}
   
versionIndex OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Index to mib (always 1)"
     ::= { version 1 } 

versionTag OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "CVS tag keyword"
     ::= { version 2 } 
     
versionDate OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Date string from RCS keyword"
     ::= { version 3 } 

versionCDate OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Date string from ctime() "
     ::= { version 4 } 

versionIdent OBJECT-TYPE
     SYNTAX  DisplayString
     ACCESS  read-only
     STATUS  mandatory
     DESCRIPTION  
          "Id string from RCS keyword"
     ::= { version 5 } 

versionClearCache OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-write
     STATUS  mandatory
     DESCRIPTION  
          "Set to 1 to clear the exec cache, if enabled"
     ::= { version 10 } 

versionUpdateConfig OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-write
     STATUS  mandatory
     DESCRIPTION  
          "Set to 1 to read-read the config file(s)."
     ::= { version 11 } 

versionRestartAgent OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-write
     STATUS  mandatory
     DESCRIPTION  
          "Set to 1 to restart the agent."
     ::= { version 12 } 

versionDoDebugging OBJECT-TYPE
     SYNTAX  INTEGER
     ACCESS  read-write
     STATUS  mandatory
     DESCRIPTION  
          "Set to 1 to turn debugging statements on in the agent."
     ::= { version 20 } 

snmperrs OBJECT-TYPE
	SYNTAX Snmperrs
	ACCESS not-accessible
	STATUS mandatory
	DESCRIPTION
		"A place for the agent to report problems."
	INDEX { snmperrIndex }
	::= { ucdavis 101 }


Snmperrs ::= SEQUENCE {
   snmperrIndex  INTEGER,
   snmperrNames  DisplayString,
   snmperrErrorFlag  INTEGER,
   snmperrErrMessage  DisplayString
}

snmperrIndex OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"Reference Index for each observed snmperr."
	::= { snmperrs 1 }

snmperrNames OBJECT-TYPE
	SYNTAX DisplayString (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"snmp"
	::= { snmperrs 2 }

snmperrErrorFlag OBJECT-TYPE
	SYNTAX INTEGER
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"A Error flag to indicate trouble with the agent.  It
		goes to 1 if there is an error, 0 if no error."
	::= { snmperrs 100 }

snmperrErrMessage OBJECT-TYPE
	SYNTAX DisplayString (SIZE (0..255))
	ACCESS read-only
	STATUS mandatory
	DESCRIPTION
		"An error message describing the problem (if one exists)."
	::= { snmperrs 101 }

MRIndex ::= TEXTUAL-CONVENTION
    DISPLAY-HINT "d"
    STATUS       current
    DESCRIPTION
	"A unique value, greater than zero, for each OID registered in 
	the agent's mibRegisteryTable"
    SYNTAX OBJECT IDENTIFIER

mibRegistryTable OBJECT-TYPE
    SYNTAX     SEQUENCE OF mibRegistryEntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "A table displaying all the oid's registered by mib modules in
        the agent."
    ::= { ucdavis  102 }

mrEntry OBJECT-TYPE
    SYNTAX     MREntry
    MAX-ACCESS not-accessible
    STATUS     current
    DESCRIPTION
        "An entry containing a registered mib oid."
    INDEX      { mrIndex }
    ::= { mibRegistryTable  1 }

MREntry ::=
    SEQUENCE {
        mrIndex
            MRIndex,
	mrModuleName
            DisplayString
    }	    

mrIndex OBJECT-TYPE
    SYNTAX     MRIndex
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
	"The registry slot of a mibmodule."
    ::= { mrEntry  1 }

mrModuleName OBJECT-TYPE
    SYNTAX     DisplayString
    MAX-ACCESS read-only
    STATUS     current
    DESCRIPTION
	"The module name that registered this OID."
    ::= { mrEntry  2 }

END
