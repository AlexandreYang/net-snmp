#############################################################  -*- c -*-
## generic include for XXX. Do not use directly.
##
## $Id$
########################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
########################################################################
##/*
## This include will generate the code needed to assign data from
## a generated data context to a parameter reference.
##
## EXAMPLE (prototype generated elsewhere)
## int
## ifName_get(ifXTable_ctx * ctx, char **ifName_ptr_ptr,
##            size_t * ifName_len_ptr) {
##
## 
## m2c_node_lh :   temp_ifName / (*ifName_ptr_ptr)
## m2c_node_lhs:   temp_ifName_len / (*ifName_len_ptr);
## m2c_data_item:  ctx->data.
## node         :  ifName
##
##    if (temp_ifName_len < ctx->data.ifName_len) {
##        temp_ifName = malloc(ctx->data.ifName_len);
##    }
##    temp_ifName_len = ctx->data.ifName_len;
##    memcpy(temp_ifName, ctx->data.ifName, temp_ifName_len);
##*/
@if "$m2c_data_context" ne "generated"@
    /** WARNING: this code might not work for $m2c_data_context */
@end@
/*
 * TODO:
 * update, replace or delete, if needed.
 *
 * This code can be used if there is a simple, direct relationship
 * beteen the MIB object ${node} and data in ctx.
 */
@if $m2c_node_needlength == 1@
    if ($m2c_node_lhs < ${m2c_data_item}${node}_len) {
       $m2c_node_lh = malloc(${m2c_data_item}${node}_len
                             * sizeof(${m2c_node_lh}[0]));
    }
    $m2c_node_lhs = ${m2c_data_item}${node}_len;
    memcpy( $m2c_node_lh, ${m2c_data_item}$node,
            $m2c_node_lhs * sizeof(${m2c_node_lh}[0]) );
@else@
    $m2c_node_lh = ${m2c_data_item}$node;
@end@ # length
##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
