##//#########################################################  -*- c -*-
##//generic include for XXX. Do not use directly.
##
##//$Id$
##//####################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
##//####################################################################
##
@open ${name}_data_access.h@
@eval $hack = "Id"@
/*
 * Note: this file originally auto-generated by mib2c using
 *       version $Revision$ of $RCSfile$
 *
 * $$hack:$
 */
@eval $m2c_save = "$name"@
@eval $name = "${name}_DATA_ACCESS"@
@include generic-header-top.m2i@
@eval $name = "$m2c_save"@

/* *********************************************************************
 * function declarations
 */

/* *********************************************************************
 * Table declarations
 */
@eval $m2c_processing_type = 'h'@
@foreach $table table@
@    include m2c_setup_table.m2i@
@    include details-table.m2i@

@    eval $m2c_tmp=""@
@    foreach $node index@
@      include m2c_setup_node.m2i@
@      eval $m2c_tmp="$m2c_tmp, $m2c_node_param_val"@
@    end@ // for each index
@    include generic-table-indexes-set.m2i@

@    include mfd-access-${m2c_table_access}-defines.m2i@
@end@

@eval $m2c_save = "$name"@
@eval $name = "${name}_DATA_ACCESS"@
@include generic-header-bottom.m2i@
@eval $name = "$m2c_save"@
##//##################################################################
##//Do the .c file
##//##################################################################
@open ${name}_data_access.c@
/*
 * Note: this file originally auto-generated by mib2c using
 *       version $Revision$ of $RCSfile$ 
 *
 * $$hack:$
 */
@include generic-source-includes.m2i@

/** @defgroup data_access data_access: Routines to access data
 *
 * These routines are used to locate the data used to satisfy
 * requests.
 * 
 * @{
 */
@eval $m2c_processing_type = 'c'@
@foreach $table table@
@    include m2c_setup_table.m2i@
@    include details-table.m2i@

/**
 * initialization for ${context} data access
 *
 * This function is called during startup to allow you to
 * allocate any resources you need for the data table.
 *
 * @param ${context}_reg
 *        Pointer to ${context}_registration
 *
 * @retval MFD_SUCCESS : success.
 * @retval MFD_ERROR   : unrecoverable error.
 */
int
${table}_init_data($mfd_aue_param_decl)
{
    DEBUGTRACE;

@ifconf ${table}_init_data.m2i@
@   include ${table}_init_data.m2i@
@else@
@   if $m2c_include_examples == 1@
$example_start
    /*
     * if you are the sole writer for the file, you could
     * open it here. However, as stated earlier, we are assuming
     * the worst case, which in this case means that the file is
     * written to by someone else, and might not even exist when
     * we start up. So we can't do anything here.
     */
$example_end
@   end@

    return MFD_SUCCESS;
@end@ #ifconf
}

@    include generic-table-indexes-set.m2i@
@    include mfd-access-${m2c_table_access}-defines.m2i@
@    if $m2c_data_transient != 0@ #
/**
 * prepare row for processing.
 *
 *  When the agent has located the row for a request, this function is
 *  called to prepare the row for processing. If the data context already
 *  contains all data, you may not need to do anything.
 *
 * @param rowreq_ctx pointer to a context.
 *
 * @retval MFD_SUCCESS     : success.
 * @retval MFD_ERROR       : other error.
 */
int
${table}_row_prep( ${context}_rowreq_ctx *rowreq_ctx)
{
    DEBUGTRACE;

    netsnmp_assert(NULL != rowreq_ctx);

    /*
     * copy data to the data context (${m2c_data_item}XXX)
     */
##@if $m2c_include_examples == 1@
##$example_start
@       foreach $node nonindex@
@          include m2c_setup_node.m2i@
    /*
     * $m2c_node_summary
     */
@          eval $m2c_ctx_lh = "$m2c_ctx_rh"@
@          eval $m2c_ctx_lhs = "$m2c_ctx_rhs"@
@          eval $m2c_ctx_rh = "TODO_FIND_$node"@
@          eval $m2c_ctx_rhs = "TODO_FIND_${node}_len"@
@          include generic-value-map.m2i@
    
@       end@ // for each
##$example_end
##@end@

   return MFD_SUCCESS;
}

@    end@ // transient
@end@
##
/** @} */
##//####################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
