#############################################################  -*- c -*-
## generic include for XXX. Do not use directly.
##
## $Id$
########################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@ # ;
########################################################################
##
/*
 * TODO:
 * check dependencies
 *
 * return SNMP_ERR_NOERROR if the all the changes to the row are legal,
 *        an SNMP error code otherwise.
 *
 * (see README-table-${table} if you don't have dependencies)
 */
int
${context}_check_dependencies(${context}_ctx *ctx)
{
    int rc = SNMP_ERR_NOERROR;
    
    netsnmp_assert(NULL != ctx);

    /*
     * TODO:
     * check that all new value are legal.
     *
     * This is useful for for tables which have dependencies
     * between columns.
     *
     * For example, two columns allocating a percentage of something
     * should add up to 100%.
     *
     * At this point in the error checking, if anything goes
     * wrong, SNMP_ERR_GENERR is probably the best error code.
     */
## }
@foreach $node nonindex@
@   ifconf syntax-$node.syntax-dependencies.m2i@
@      include syntax-$node.syntax-dependencies.m2i@

@   end@
@end@ # for each
## {
    return rc;
}

##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
