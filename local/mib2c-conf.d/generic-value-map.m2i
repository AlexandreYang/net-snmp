########################################################################
## generic include for XXX. Don't use directly.
##
## $Id$
########################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
########################################################################
##
   /*
    * TODO: value mapping
    * If the values for your data type don't exactly match the
    * possible values defined by the mib, you should map them here.
    */
##&& ($node.syntax ne $node.perltype) 
@if ("$node.perltype" eq "INTEGER") && ($node.enums == 1)@
$example_start
 /* TODO: update INTERNAL_* macros defined in the header */
    switch($m2c_node_lh) {
@    if $node.syntax ne $node.perltype@
@        eval $m2c_de_pfx = "${m2c_const_pfx}$node.syntax"@
@    else@
@        eval $m2c_de_pfx = "${m2c_const_pfx}$node"@
@    end@
@    foreach $e $v enum@
@        eval $m2c_iname = "${m2c_const_pfx}${node}_${e}"@
@        eval $m2c_ename = "${m2c_de_pfx}_${e}"@
@        if $m2c_const_lc == 0@
@            eval $m2c_ename = uc($m2c_ename)@
@            eval $m2c_iname = uc($m2c_iname)@
@        end@
        case INTERNAL_$m2c_iname:
             $m2c_node_lh = $m2c_ename;
             break;

@    end@ # foreach
             default:
                 snmp_log(LOG_ERR, "couldn't map value %d for $node\n", $m2c_node_lh );
                 return SNMP_ERR_GENERR;
    }
$example_end
@end@    

##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
