/*
 * Note: this file originally auto-generated by mib2c using
 *       version : 1.25 $ of : mfd-top.m2c,v $
 *
 * $Id$
 */
#ifndef INETCIDRROUTETABLE_H
#define INETCIDRROUTETABLE_H

#ifdef __cplusplus
extern          "C" {
#endif


/** @defgroup misc misc: Miscelaneous routines
 *
 * @{
 */
#include <net-snmp/library/asn1.h>

#include <net-snmp/data_access/route.h>

    /*
     * other required module components 
     */
    /* *INDENT-OFF*  */
    config_require(ip-forward-mib/data_access/route);
    config_require(ip-forward-mib/inetCidrRouteTable/inetCidrRouteTable_interface);
    config_require(ip-forward-mib/inetCidrRouteTable/inetCidrRouteTable_data_access);
    /* *INDENT-ON*  */

    /*
     * OID, column number and enum definions for  
     */
#include "inetCidrRouteTable_constants.h"

    /*
     *********************************************************************
     * function declarations
     */
    void            init_inetCidrRouteTable(void);

    /*
     *********************************************************************
     * Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table inetCidrRouteTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * inetCidrRouteTable is subid 7 of ipForward.
     * It's status is Current.
     * OID: .1.3.6.1.2.1.4.24.7, length: 9
     */
    /*
     *********************************************************************
     * When you register your mib, you get to provide a generic
     * pointer that will be passed back to you for most of the
     * functions calls.
     */
    typedef netsnmp_data_list *inetCidrRouteTable_registration_ptr;

/**********************************************************************/
    /*
     * data context
     */
    typedef netsnmp_route_entry inetCidrRouteTable_data;


    /*
     *********************************************************************
     * undo context
     * We're just going to use the same data structure for our
     * undo_context. If you want to do something more efficent,
     * define your typedef here.
     */
    typedef inetCidrRouteTable_data inetCidrRouteTable_undo_data;

    /*
     * This structure is used to represent the index for a table.
     */
    typedef struct inetCidrRouteTable_mib_index_s {

        /*
         * inetCidrRouteDestType(1)/InetAddressType/ASN_INTEGER/long(u_long)//l/a/w/E/r/d/h
         */
        u_long          inetCidrRouteDestType;

        /*
         * inetCidrRouteDest(2)/InetAddress/ASN_OCTET_STR/char(char)//L/a/w/e/R/d/h
         */
        /** 128 - 1(entry) - 1(col) - 5(other indexes) = 110 */
        char            inetCidrRouteDest[110];
        size_t          inetCidrRouteDest_len;

        /*
         * inetCidrRoutePfxLen(3)/InetAddressPrefixLength/ASN_UNSIGNED/u_long(u_long)//l/a/w/e/R/d/H
         */
        u_long          inetCidrRoutePfxLen;

        /*
         * inetCidrRoutePolicy(4)/OBJECTID/ASN_OBJECT_ID/oid(oid)//L/a/w/e/r/d/h
         */
        /** 128 - 1(entry) - 1(col) - 5(other indexes) = 110 */
        oid             inetCidrRoutePolicy[110];
        size_t          inetCidrRoutePolicy_len;

        /*
         * inetCidrRouteNextHopType(5)/InetAddressType/ASN_INTEGER/long(u_long)//l/a/w/E/r/d/h
         */
        u_long          inetCidrRouteNextHopType;

        /*
         * inetCidrRouteNextHop(6)/InetAddress/ASN_OCTET_STR/char(char)//L/a/w/e/R/d/h
         */
        /** 128 - 1(entry) - 1(col) - 5(other indexes) = 110 */
        char            inetCidrRouteNextHop[110];
        size_t          inetCidrRouteNextHop_len;


    } inetCidrRouteTable_mib_index;


    /*
     *********************************************************************
     * Row request context
     * When your functions are called, you will be passed a
     * inetCidrRouteTable_rowreq_ctx pointer.
     */
    typedef struct inetCidrRouteTable_rowreq_ctx_s {

    /** this must be first for container compare to work */
        netsnmp_index   oid_idx;
        oid             oid_tmp[MAX_OID_LEN];   /* xxx-rks: shrink this */

        inetCidrRouteTable_mib_index tbl_idx;

        inetCidrRouteTable_data *data;
        inetCidrRouteTable_undo_data *undo;
        unsigned int    set_flags;

    /** implementor's context pointer provided during registration */
        inetCidrRouteTable_registration_ptr inetCidrRouteTable_reg;

        /*
         * TODO:
         * add any other useful data
         *       (e.g. flags for when a column has been set)
         */
       u_char inetCidrRouteStatus;

        /*
         * storage for future expansion
         */
        netsnmp_data_list *inetCidrRouteTable_data_list;

    } inetCidrRouteTable_rowreq_ctx;

    typedef struct inetCidrRouteTable_ref_rowreq_ctx_s {
        inetCidrRouteTable_rowreq_ctx *rowreq_ctx;
    } inetCidrRouteTable_ref_rowreq_ctx;

    /*
     *********************************************************************
     * function prototypes
     */
    int            
        inetCidrRouteTable_pre_request(inetCidrRouteTable_registration_ptr
                                       user_context);
    int            
        inetCidrRouteTable_post_request(inetCidrRouteTable_registration_ptr
                                        user_context);

    inetCidrRouteTable_data *inetCidrRouteTable_allocate_data(void);
    void            inetCidrRouteTable_release_data(inetCidrRouteTable_data
                                                    * data);

    int             inetCidrRouteTable_commit(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    extern oid      inetCidrRouteTable_oid[];
    extern int      inetCidrRouteTable_oid_size;


#include "inetCidrRouteTable_interface.h"
#include "inetCidrRouteTable_data_access.h"
    /*
     *********************************************************************
     * GET function declarations
     */

    /*
     *********************************************************************
     * GET Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table inetCidrRouteTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * inetCidrRouteTable is subid 7 of ipForward.
     * It's status is Current.
     * OID: .1.3.6.1.2.1.4.24.7, length: 9
     */
    /*
     * indexes
     */
    int             inetCidrRouteDestType_map(u_long *
                                              mib_inetCidrRouteDestType_val_ptr,
                                              u_long
                                              raw_inetCidrRouteDestType_val);
    int             inetCidrRouteDest_map(char
                                          **mib_inetCidrRouteDest_val_ptr_ptr,
                                          size_t
                                          *mib_inetCidrRouteDest_val_ptr_len_ptr,
                                          char
                                          *raw_inetCidrRouteDest_val_ptr,
                                          size_t
                                          raw_inetCidrRouteDest_val_ptr_len,
                                          int allow_realloc);
    int             inetCidrRoutePfxLen_map(u_long *
                                            mib_inetCidrRoutePfxLen_val_ptr,
                                            u_long
                                            raw_inetCidrRoutePfxLen_val);
    int             inetCidrRoutePolicy_map(oid **
                                            mib_inetCidrRoutePolicy_val_ptr_ptr,
                                            size_t
                                            *mib_inetCidrRoutePolicy_val_ptr_len_ptr,
                                            oid *
                                            raw_inetCidrRoutePolicy_val_ptr,
                                            size_t
                                            raw_inetCidrRoutePolicy_val_ptr_len,
                                            int allow_realloc);
    int             inetCidrRouteNextHopType_map(u_long *
                                                 mib_inetCidrRouteNextHopType_val_ptr,
                                                 u_long
                                                 raw_inetCidrRouteNextHopType_val);
    int             inetCidrRouteNextHop_map(char
                                             **mib_inetCidrRouteNextHop_val_ptr_ptr,
                                             size_t
                                             *mib_inetCidrRouteNextHop_val_ptr_len_ptr,
                                             char
                                             *raw_inetCidrRouteNextHop_val_ptr,
                                             size_t
                                             raw_inetCidrRouteNextHop_val_ptr_len,
                                             int allow_realloc);

    int             inetCidrRouteIfIndex_map(long
                                             *mib_inetCidrRouteIfIndex_val_ptr,
                                             long
                                             raw_inetCidrRouteIfIndex_val);
    int             inetCidrRouteIfIndex_get(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             *inetCidrRouteIfIndex_val_ptr);
    int             inetCidrRouteType_map(u_long *
                                          mib_inetCidrRouteType_val_ptr,
                                          u_long
                                          raw_inetCidrRouteType_val);
    int             inetCidrRouteType_get(inetCidrRouteTable_rowreq_ctx *
                                          rowreq_ctx,
                                          u_long *
                                          inetCidrRouteType_val_ptr);
    int             inetCidrRouteProto_map(u_long *
                                           mib_inetCidrRouteProto_val_ptr,
                                           u_long
                                           raw_inetCidrRouteProto_val);
    int             inetCidrRouteProto_get(inetCidrRouteTable_rowreq_ctx *
                                           rowreq_ctx,
                                           u_long *
                                           inetCidrRouteProto_val_ptr);
    int             inetCidrRouteAge_map(u_long *
                                         mib_inetCidrRouteAge_val_ptr,
                                         u_long raw_inetCidrRouteAge_val);
    int             inetCidrRouteAge_get(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         u_long *
                                         inetCidrRouteAge_val_ptr);
    int             inetCidrRouteNextHopAS_map(u_long *
                                               mib_inetCidrRouteNextHopAS_val_ptr,
                                               u_long
                                               raw_inetCidrRouteNextHopAS_val);
    int            
        inetCidrRouteNextHopAS_get(inetCidrRouteTable_rowreq_ctx *
                                   rowreq_ctx,
                                   u_long *
                                   inetCidrRouteNextHopAS_val_ptr);
    int             inetCidrRouteMetric1_map(long
                                             *mib_inetCidrRouteMetric1_val_ptr,
                                             long
                                             raw_inetCidrRouteMetric1_val);
    int             inetCidrRouteMetric1_get(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             *inetCidrRouteMetric1_val_ptr);
    int             inetCidrRouteMetric2_map(long
                                             *mib_inetCidrRouteMetric2_val_ptr,
                                             long
                                             raw_inetCidrRouteMetric2_val);
    int             inetCidrRouteMetric2_get(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             *inetCidrRouteMetric2_val_ptr);
    int             inetCidrRouteMetric3_map(long
                                             *mib_inetCidrRouteMetric3_val_ptr,
                                             long
                                             raw_inetCidrRouteMetric3_val);
    int             inetCidrRouteMetric3_get(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             *inetCidrRouteMetric3_val_ptr);
    int             inetCidrRouteMetric4_map(long
                                             *mib_inetCidrRouteMetric4_val_ptr,
                                             long
                                             raw_inetCidrRouteMetric4_val);
    int             inetCidrRouteMetric4_get(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             *inetCidrRouteMetric4_val_ptr);
    int             inetCidrRouteMetric5_map(long
                                             *mib_inetCidrRouteMetric5_val_ptr,
                                             long
                                             raw_inetCidrRouteMetric5_val);
    int             inetCidrRouteMetric5_get(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             *inetCidrRouteMetric5_val_ptr);
    int             inetCidrRouteStatus_map(u_long *
                                            mib_inetCidrRouteStatus_val_ptr,
                                            u_long
                                            raw_inetCidrRouteStatus_val);
    int             inetCidrRouteStatus_get(inetCidrRouteTable_rowreq_ctx *
                                            rowreq_ctx,
                                            u_long *
                                            inetCidrRouteStatus_val_ptr);


    int            
        inetCidrRouteTable_indexes_set_tbl_idx(inetCidrRouteTable_mib_index
                                               * tbl_idx,
                                               u_long
                                               inetCidrRouteDestType_val,
                                               char
                                               *inetCidrRouteDest_val_ptr,
                                               size_t
                                               inetCidrRouteDest_val_ptr_len,
                                               u_long
                                               inetCidrRoutePfxLen_val,
                                               oid *
                                               inetCidrRoutePolicy_val_ptr,
                                               size_t
                                               inetCidrRoutePolicy_val_ptr_len,
                                               u_long
                                               inetCidrRouteNextHopType_val,
                                               char
                                               *inetCidrRouteNextHop_val_ptr,
                                               size_t
                                               inetCidrRouteNextHop_val_ptr_len);
    int            
        inetCidrRouteTable_indexes_set(inetCidrRouteTable_rowreq_ctx *
                                       rowreq_ctx,
                                       u_long inetCidrRouteDestType_val,
                                       char *inetCidrRouteDest_val_ptr,
                                       size_t
                                       inetCidrRouteDest_val_ptr_len,
                                       u_long inetCidrRoutePfxLen_val,
                                       oid * inetCidrRoutePolicy_val_ptr,
                                       size_t
                                       inetCidrRoutePolicy_val_ptr_len,
                                       u_long inetCidrRouteNextHopType_val,
                                       char *inetCidrRouteNextHop_val_ptr,
                                       size_t
                                       inetCidrRouteNextHop_val_ptr_len);



    /*
     *********************************************************************
     * SET function declarations
     */

    /*
     *********************************************************************
     * SET Table declarations
     */
/**********************************************************************
 **********************************************************************
 ***
 *** Table inetCidrRouteTable
 ***
 **********************************************************************
 **********************************************************************/
    /*
     * inetCidrRouteTable is subid 7 of ipForward.
     * It's status is Current.
     * OID: .1.3.6.1.2.1.4.24.7, length: 9
     */
    int             inetCidrRouteDestType_check_index(inetCidrRouteTable_rowreq_ctx * rowreq_ctx);      /* internal */
    int             inetCidrRouteDest_check_index(inetCidrRouteTable_rowreq_ctx * rowreq_ctx);  /* internal */
    int             inetCidrRoutePfxLen_check_index(inetCidrRouteTable_rowreq_ctx * rowreq_ctx);        /* internal */
    int             inetCidrRoutePolicy_check_index(inetCidrRouteTable_rowreq_ctx * rowreq_ctx);        /* internal */
    int             inetCidrRouteNextHopType_check_index(inetCidrRouteTable_rowreq_ctx * rowreq_ctx);   /* internal */
    int             inetCidrRouteNextHop_check_index(inetCidrRouteTable_rowreq_ctx * rowreq_ctx);       /* internal */


    int            
        inetCidrRouteTable_validate_index
        (inetCidrRouteTable_registration_ptr inetCidrRouteTable_reg,
         inetCidrRouteTable_rowreq_ctx * rowreq_ctx);
    int            
        inetCidrRouteTable_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                      rowreq_ctx);
    int            
        inetCidrRouteTable_undo_cleanup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteTable_commit(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);
    int            
        inetCidrRouteTable_undo_commit(inetCidrRouteTable_rowreq_ctx *
                                       rowreq_ctx);


    int            
        inetCidrRouteIfIndex_check_value(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         long inetCidrRouteIfIndex_val);
    int            
        inetCidrRouteIfIndex_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteIfIndex_set(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             inetCidrRouteIfIndex_val);
    int             inetCidrRouteIfIndex_undo(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        inetCidrRouteType_check_value(inetCidrRouteTable_rowreq_ctx *
                                      rowreq_ctx,
                                      u_long inetCidrRouteType_val);
    int            
        inetCidrRouteType_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                     rowreq_ctx);
    int             inetCidrRouteType_set(inetCidrRouteTable_rowreq_ctx *
                                          rowreq_ctx,
                                          u_long inetCidrRouteType_val);
    int             inetCidrRouteType_undo(inetCidrRouteTable_rowreq_ctx *
                                           rowreq_ctx);

    int            
        inetCidrRouteProto_check_value(inetCidrRouteTable_rowreq_ctx *
                                       rowreq_ctx,
                                       u_long inetCidrRouteProto_val);
    int            
        inetCidrRouteProto_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                      rowreq_ctx);
    int             inetCidrRouteProto_set(inetCidrRouteTable_rowreq_ctx *
                                           rowreq_ctx,
                                           u_long inetCidrRouteProto_val);
    int             inetCidrRouteProto_undo(inetCidrRouteTable_rowreq_ctx *
                                            rowreq_ctx);

    int            
        inetCidrRouteAge_check_value(inetCidrRouteTable_rowreq_ctx *
                                     rowreq_ctx,
                                     u_long inetCidrRouteAge_val);
    int            
        inetCidrRouteAge_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                    rowreq_ctx);
    int             inetCidrRouteAge_set(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         u_long inetCidrRouteAge_val);
    int             inetCidrRouteAge_undo(inetCidrRouteTable_rowreq_ctx *
                                          rowreq_ctx);

    int            
        inetCidrRouteNextHopAS_check_value(inetCidrRouteTable_rowreq_ctx *
                                           rowreq_ctx,
                                           u_long
                                           inetCidrRouteNextHopAS_val);
    int            
        inetCidrRouteNextHopAS_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                          rowreq_ctx);
    int            
        inetCidrRouteNextHopAS_set(inetCidrRouteTable_rowreq_ctx *
                                   rowreq_ctx,
                                   u_long inetCidrRouteNextHopAS_val);
    int            
        inetCidrRouteNextHopAS_undo(inetCidrRouteTable_rowreq_ctx *
                                    rowreq_ctx);

    int            
        inetCidrRouteMetric1_check_value(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         long inetCidrRouteMetric1_val);
    int            
        inetCidrRouteMetric1_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteMetric1_set(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             inetCidrRouteMetric1_val);
    int             inetCidrRouteMetric1_undo(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        inetCidrRouteMetric2_check_value(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         long inetCidrRouteMetric2_val);
    int            
        inetCidrRouteMetric2_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteMetric2_set(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             inetCidrRouteMetric2_val);
    int             inetCidrRouteMetric2_undo(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        inetCidrRouteMetric3_check_value(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         long inetCidrRouteMetric3_val);
    int            
        inetCidrRouteMetric3_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteMetric3_set(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             inetCidrRouteMetric3_val);
    int             inetCidrRouteMetric3_undo(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        inetCidrRouteMetric4_check_value(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         long inetCidrRouteMetric4_val);
    int            
        inetCidrRouteMetric4_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteMetric4_set(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             inetCidrRouteMetric4_val);
    int             inetCidrRouteMetric4_undo(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        inetCidrRouteMetric5_check_value(inetCidrRouteTable_rowreq_ctx *
                                         rowreq_ctx,
                                         long inetCidrRouteMetric5_val);
    int            
        inetCidrRouteMetric5_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx);
    int             inetCidrRouteMetric5_set(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx,
                                             long
                                             inetCidrRouteMetric5_val);
    int             inetCidrRouteMetric5_undo(inetCidrRouteTable_rowreq_ctx
                                              * rowreq_ctx);

    int            
        inetCidrRouteStatus_check_value(inetCidrRouteTable_rowreq_ctx *
                                        rowreq_ctx,
                                        u_long inetCidrRouteStatus_val);
    int            
        inetCidrRouteStatus_undo_setup(inetCidrRouteTable_rowreq_ctx *
                                       rowreq_ctx);
    int             inetCidrRouteStatus_set(inetCidrRouteTable_rowreq_ctx *
                                            rowreq_ctx,
                                            u_long
                                            inetCidrRouteStatus_val);
    int             inetCidrRouteStatus_undo(inetCidrRouteTable_rowreq_ctx
                                             * rowreq_ctx);


    int            
        inetCidrRouteTable_check_dependencies(inetCidrRouteTable_rowreq_ctx
                                              * ctx);



#ifndef MFD_SUCCESS
#define MFD_SUCCESS              SNMP_ERR_NOERROR
#define MFD_SKIP                 SNMP_NOSUCHINSTANCE
#define MFD_ERROR                SNMP_ERR_GENERR
#define MFD_RESOURCE_UNAVAILABLE SNMP_ERR_RESOURCEUNAVAILABLE
#define MFD_NOT_VALID_NOW        SNMP_ERR_INCONSISTENTVALUE
#define MFD_NOT_VALID_EVER       SNMP_ERR_WRONGVALUE
#define MFD_CANNOT_CREATE_NOW    SNMP_ERR_INCONSISTENTNAME
#define MFD_CANNOT_CREATE_EVER   SNMP_ERR_NOCREATION
#define MFD_END_OF_DATA          SNMP_ENDOFMIBVIEW
#endif

#ifdef __cplusplus
};
#endif

#endif                          /* INETCIDRROUTETABLE_H */
