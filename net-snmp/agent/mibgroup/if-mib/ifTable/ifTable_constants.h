/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-constants.m2c,v 1.2 2004/03/29 23:28:42 rstory Exp $
 *
 * $Id$
 */
#ifndef IFTABLE_CONSTANTS_H
#define IFTABLE_CONSTANTS_H

#ifdef __cplusplus
extern          "C" {
#endif


    /*
     * column number definitions for table ifTable 
     */
#define IFTABLE_OID              1,3,6,1,2,1,2,2
#define COLUMN_IFINDEX		1
#define COLUMN_IFDESCR		2
#define COLUMN_IFTYPE		3
#define COLUMN_IFMTU		4
#define COLUMN_IFSPEED		5
#define COLUMN_IFPHYSADDRESS		6
#define COLUMN_IFADMINSTATUS		7
#define COLUMN_IFOPERSTATUS		8
#define COLUMN_IFLASTCHANGE		9
#define COLUMN_IFINOCTETS		10
#define COLUMN_IFINUCASTPKTS		11
#define COLUMN_IFINNUCASTPKTS		12
#define COLUMN_IFINDISCARDS		13
#define COLUMN_IFINERRORS		14
#define COLUMN_IFINUNKNOWNPROTOS		15
#define COLUMN_IFOUTOCTETS		16
#define COLUMN_IFOUTUCASTPKTS		17
#define COLUMN_IFOUTNUCASTPKTS		18
#define COLUMN_IFOUTDISCARDS		19
#define COLUMN_IFOUTERRORS		20
#define COLUMN_IFOUTQLEN		21
#define COLUMN_IFSPECIFIC		22

#define IFTABLE_MIN_COL		COLUMN_IFINDEX
#define IFTABLE_MAX_COL		COLUMN_IFSPECIFIC


    /*
     * NOTES on emus
     * =============
     *
     * Value Mapping
     * -------------
     * If the values for your data type don't exactly match the
     * possible values defined by the mib, you should map them
     * below. For example, a boolean flag (1/0) is usually represented
     * as a TruthValue in a MIB, which maps to the values (1/2).
     *
     */

/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table ifTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * ifType (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redifinitions of the enum values.
 */
#ifndef ifType_ENUMS
#define ifType_ENUMS

#define IFTYPE_OTHER  1

#endif                          /* ifType_ENUMS */

    /*
     * TODO:
     * value mapping (set notes at top of file)
     */
#define INTERNAL_IFTYPE_OTHER  1

/*************************************************************
 * constants for enums for the MIB node
 * ifAdminStatus (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redifinitions of the enum values.
 */
#ifndef ifAdminStatus_ENUMS
#define ifAdminStatus_ENUMS

#define IFADMINSTATUS_UP  1
#define IFADMINSTATUS_DOWN  2
#define IFADMINSTATUS_TESTING  3


#endif                          /* ifAdminStatus_ENUMS */

/*************************************************************
 * constants for enums for the MIB node
 * ifOperStatus (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redifinitions of the enum values.
 */
#ifndef ifOperStatus_ENUMS
#define ifOperStatus_ENUMS

#define IFOPERSTATUS_UP  1
#define IFOPERSTATUS_DOWN  2
#define IFOPERSTATUS_TESTING  3


#endif                          /* ifOperStatus_ENUMS */



#ifdef __cplusplus
};
#endif

#endif                          /* IFTABLE_OIDS_H */
