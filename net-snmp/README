DISCLAIMER

  I use this software on over 150 hosts to monitor our systems.
  Because we use HP-OpenView as our manager, I haven't written any
  sort of management platform, so don't look for one here.

  I suggest v2 authentication only for mibs with vital information...  

  The Author, the Univeristy of California, the University of
  California at Davis, and the Electrical Engineering department at
  the University of California at Davis assume no responsibility for
  damage or loss of system performance as a direct or indirect result
  of the use of this software.  This software is provided "as is"
  without express or implied warranty.

INTRO

  This package contains a port and modified code of the CMU 2.1.2.1
  snmp agent.  It has been modified to allow extensibility quickly
  and easily.  It is far from the best and most configurable systems;
  but hey: its free.
  
  A while back, we wanted to monitor problems on our network and hosts
  that were easily noticeable.  Therefore, we needed an extensible
  agent.  We started with the agent distributed with Ultrix 4.2, but
  had serious problems with it (there is now way to distinguish
  between get/getnext requests causing the agent to loop forever).
  Then we decided to look into the HP extensible agent.  Looked
  perfect.  Then we saw the price.  Too much for an educational
  facility (it was ~$1000/host but is now closer to $200/host).  

  We opted for the third route: modifying the CMU code to do the things
  we wanted.  This gives the added benefit of being free and identical
  on all the platforms we wanted it to run on.  This package is a
  result of that effort.

  We use this agent here to monitor known system problems before they
  take the machine over.  The agent can be easily configured to
  monitor the number of a given process running, run external scripts
  to check and report functional status.  Examples: mountd(s) under
  Ultrix 4.3 which tend to fork themselves crazy and eventually fill
  up the process table; On our hp700s, "amd" sometimes stops working,
  HP VUE hangs and fails to start X, etc.

  We use HP-OpenView to poll the enclosed agent every half an hour
  looking for these problems.  The problems are then logged in a file,
  which the programmers monitor using xlbiff.  I don't know how useful
  this package will be to the outside world, but I thought I'd let you
  decide that for yourself.

SUPPORTED ARCHITECTURES

  I'm using it on these architectures:  
     hppa1.1-hp-hpux9.05
        -- I develop here...  Its the architecture best supported in
	   this package.  It is the only architecture that supports
	   swap space checks. 

     mips-dec-ultrix4.3
     alpha-dec-osf3.2
     sparc-sun-solaris2.4
     sparc-sun-sunos4.1.4

  Please let me know if you compile it on other OS versions and it
  works for you so I can add them to the above list.

AVAILABILITY
  ftp.ece.ucdavis.edu:/pub/snmp/ucd-snmp.tar.gz

  This file will always point to the latest revision.  If you see
  newer revisions in the directory marked with a -A[1-9] or -B[1-9]
  please note that these are alpha ports of the next release.  Beware.

INSTALLATION

  See the INSTALL file distributed with this package.

CODE UPDATES / MAILING LIST

  I hate broadcasting announce messages, so there is a mailing list
  setup to handle announcements.  Anytime I put new software out for
  ftp, I'll mail it to ucd-snmp-announce@ece.ucdavis.edu.  To
  subscribe/unsubscribe yourself to/from this list, mail a note to
  ucd-snmp-announce-request@ece.ucdavis.edu with a subject line of
  'subscribe' or 'unsubscribe'.  I will post new announcements on a
  very infrequent basis to the other channels, but only for major code
  revisions and not for patches or small feature upgrades.  

SNMPv1 vs. SNMPv2

  Typically, I doubt you want people to look at most of your mib tree.
  By defining GLOBALSECURITY in the config.h file, you can restrict
  access to any of the mibs implemented in this package to the
  security type you define it to.  I define mine to SNMPV2AUTH, or
  authenticated requests only.  I then define the SECURITYEXCEPTIONS
  to allow .100 requests, since HP Openview can only use SNMPv1
  protocols.  The CMU code does not have hooks for privacy protocols,
  so nothing is mentioned about it here.  If you don't understand
  anything I have said here, change GLOBALSECURITY to SNMPV1 and you
  shouldn't have problems.

DESIGN

  The MIB base of the extensible section is defined in config.h by
  EXTENSIBLEMIB.

  Each mib that we use has the following conventions: Under each mib
  in the extensible section, there are a number of tables built into
  every mib:

  .1    INDEX -- A unique numeral for each entry
  .2    NAME  -- unique name 
  .100  FLAG  -- In most cases a 1 or a 0 indicating an error.
                 For extensible shell/exec functions, the exit status
		 of the shell/exec.
  .101  MESG  -- A message describing the problem or the first line of
                 the output of the shell/exec.
  .102  FIX   -- A settable entry to fix the given problem when set to 1,
                 using a shell script (or whatever) that knows how to
		 fix problems on the machine.

  Now, lets take the process check mib (enabled in config.h)
  (EXTENSIBLEMIB.1 by default).  Under this mib there is the following
  set of additional mib tables to the ones mentioned above:

  .3    MIN   -- straight from the config file
  .4    MAX   -- ditto
  .5    NUM   -- the actual number found running

  The exec entries that define their own mibs use the standard
  extensions defined above.

MAN PAGES/DOCUMENTATION

  Write them for me, would ya?  All you get is this file!

CONFIGURATION

  By default, it looks for two files when it starts up, both of which
  are defined in config.h.  This file contains different types of
  arguments, each described below.

--

  proc <PROCESSNAME> [MAX] [MIN]
  e.g.:  proc ntalkd 4 0

  This checks the process list for PROCESSNAME, and reports an error
  if not found or less than MIN are found or more than MAX are found.

  e.g.:  snmpwalk -v 1 host public EXTENSIBLEMIB.PROCMIBNUM.100
         -- reports errors on the host (flags:  1 if err, 0 if none).
         -- this will work for all enclosed mibs, not just "proc".

--

  swap <SIZE>
  e.g.:  swap 16000

  Reports an error if less than SIZE swap space is available. (hpux only)

--

  disk <MOUNTLOC> <SIZE>
  e.g.:  disk / 10000

  Generates an error if MOUNTLOC has less than SIZE bytes of space.

--

  load <ONE> <FIVE> <FIFTEEN>
  e.g.:  load 12 14 14
  
  Generates an error if the load-average of a machine grows beyond
  these numbers.  Useful if your machine stops receiving mail beyond a
  given load average.

--

  exec [MIB] <NAME> <COMMAND...>
  shell [MIB] <NAME> <COMMAND...>
  e.g.:  exec test /bin/sh /script/to/check/something
  e.g.:  exec .1.3.6.4.1000.10 top /usr/local/bin/top

  Execs the script and reports the exit status and one line output for
  the default mib specified in config.h.  If a mib number is given, it
  uses that location in the mib tree instead and you can snmpwalk the
  output for *all* the lines of output (101 becomes a table of the
  output).

  e.g.:  "snmpwalk -v 1 machine public .1.3.6.4.1000.10.101" will get you the
         "top" output from the machine. (Assuming you allow SNMPv1)

  Note:  Use exec instead of shell.  More time has been spent putting
         in the exec call and testing it.  Thats why example one above
	 execs /bin/sh instead of just using a 'shell' configuration line.

--

MISC

  - snmpd now detaches from the shell unless -f is specified (don't
    fork)

  - Mib table is now qsorted at run time and the extensible variables are
    sorted in at this time.  This brings the agent up to correct
    SNMPwalk/getnext protocols.  You can now walk the entire tree
    including the extensible sections and it won't stop.

    * This has an added bonus of checking the mib table
      (agent/snmp_vars.c) for correct order.  I have added things to the
      wrong location too many times and caused the agent to function
      incorrectly.  Major win.

  the "local" directory has some scripts I use here.  They will not
  work straight up on your system without modification!

    -- trapnotif -- called from OV upon detection of an error
    -- snmpcheck -- pre-pre-alpha of a perl5.001/Tkb4 script to 
                    fix/monitor problems
    -- rsnmp     -- snmpwalks known mibs (so you don't have to
                    remember them)
    -- fixproc   -- the perl script we use to fix things remotely.

CLOSING

Have fun,
I love patches.   Send some to me!

Also, I'm interested if anyone actually uses/likes/hates/whatever this
package...  Mail me a note and let me know what you think of it!
                                                                _____
			        			       / ___ \
Wes Hardaker		             		       	      / /   \/
Department of Electrical and Computer Engineering            \--/     /\
University of California at Davis	 __________________   \/     /--\
Davis CA  95616                         /     Recycle      \    /\___/ /
(hardaker@ece.ucdavis.edu)             / It's not too late! \   \_____/
