#!/bin/sh

# tests common to tls and dtls usages

STARTAGENT

# using user 1 - a common name mapped certificate
CAPTURE "snmpget -l ap -u bogus --defSecurityModel=tsm -On $SNMP_FLAGS $NOAUTHTESTARGS $SNMP_TRANSPORT_SPEC:$SNMP_TEST_DEST$SNMP_SNMPD_PORT .1.3.6.1.2.1.1.3.0"

CHECK       ".1.3.6.1.2.1.1.3.0 = Timeticks:"

# using user 2 - a common name mapped certificate with a direct -T FP request
CAPTURE "snmpget -l ap -u bogus -T my_fingerprint=$OTHERUSERFP --defSecurityModel=tsm -On $SNMP_FLAGS $NOAUTHTESTARGS $SNMP_TRANSPORT_SPEC:$SNMP_TEST_DEST$SNMP_SNMPD_PORT .1.3.6.1.2.1.1.4.0"

CHECK              ".1.3.6.1.2.1.1.4.0 = "
CHECKAGENTCOUNT 2  "otheruser"

# using user 3 - an invalid certificate (mapped but not authorized)
CAPTURE "snmpget -l ap -u bogus -T my_fingerprint=$INVALIDUSERFP --defSecurityModel=tsm -On $SNMP_FLAGS $NOAUTHTESTARGS $SNMP_TRANSPORT_SPEC:$SNMP_TEST_DEST$SNMP_SNMPD_PORT .1.3.6.1.2.1.1.3.0"

CHECK "authorizationError"

# using user 4 - an unmapped certificate
CAPTURE "snmpget -l ap -u bogus -T my_fingerprint=$UNMAPPEDFP --defSecurityModel=tsm -On $SNMP_FLAGS $NOAUTHTESTARGS $SNMP_TRANSPORT_SPEC:$SNMP_TEST_DEST$SNMP_SNMPD_PORT .1.3.6.1.2.1.1.3.0"

CHECK "failed rfc5343"

# Check *their* certificate with a different one than expected; should fail
CAPTURE "snmpget -l ap -u bogus -T my_fingerprint=$OTHERUSERFP -T their_fingerprint=$OTHERUSERFP --defSecurityModel=tsm -On $SNMP_FLAGS $NOAUTHTESTARGS $SNMP_TRANSPORT_SPEC:$SNMP_TEST_DEST$SNMP_SNMPD_PORT .1.3.6.1.2.1.1.3.0"

CHECK "failed to verify ssl certificate"

# using user 5 - a completely remapped certificate (direct specified secname)
CAPTURE "snmpget -l ap -u bogus -T my_fingerprint=$MAPPEDUSERFP --defSecurityModel=tsm -On $SNMP_FLAGS $NOAUTHTESTARGS $SNMP_TRANSPORT_SPEC:$SNMP_TEST_DEST$SNMP_SNMPD_PORT .1.3.6.1.2.1.1.5.0"

CHECK              ".1.3.6.1.2.1.1.5.0 = "
CHECKAGENTCOUNT 2  "aftermapping"

STOPAGENT

FINISHED

