#############################################################  -*- c -*-
## generic include for XXX. Do not use directly.
##
## $Id$
########################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
########################################################################
##
##   memcpy((u_char*)&$node, ${node}_ptr, ${node}_len * sizeof(mib_idx->${node}[0]));
##   mib_idx->${node}_len = ${node}_len;
/**
 * set the index context from native C values
 *
 * This convenience function is useful for setting all the MIB index components
 * with a single function call. It is assume that the C values are native/raw
 * format, and the mapping function is called (or suggested) when necessary.
 */
@eval $m2c_tmp=""@
@foreach $node index@
@   include m2c_setup_node.m2i@
@   eval $m2c_tmp="$m2c_tmp, $m2c_node_param_val"@
@end@ # for each index
int
${context}_indexes_set(${context}_mib_index *mib_idx$m2c_tmp)
{
    DEBUGTRACE;

@foreach $node index@
@   include m2c_setup_node.m2i@
@eval $m2c_node_realloc = 0@ // fail
    /* $m2c_node_summary */
@   eval $m2c_ctx_lh = "mib_idx->$node"@
@   eval $m2c_ctx_lhs = "mib_idx->${node}_len"@
@   eval $m2c_ctx_rh = "$m2c_node_param_val_name"@
@   eval $m2c_ctx_rhs = "$m2c_node_param_val_lname"@
@   include generic-value-map.m2i@
    
@end@ // for each column

    /** xxx-rks: call validation routines? assume caller knows what they
     * are doing? */
    return MFD_SUCCESS;
}

##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
