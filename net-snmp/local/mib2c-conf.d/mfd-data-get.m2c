############################################################# -*- c -*-
## generic include for XXX. Do not use directly.
##
## $Id$
########################################################################
########################################################################
@if "$m2c_processing_type" ne 'c'@
@if $m2c_create_fewer_files != 1@
@   open ${name}_data_get.h@
@   eval $hack = "Id"@
/*
 * Note: this file originally auto-generated by mib2c using
 *       version $Revision$ of $RCSfile$
 *
 * $$hack:$
 */
@   eval $m2c_tmp = "$name"@
@   eval $name = "${name}_DATA_GET"@
@   include generic-header-top.m2i@
@   eval $name = "$m2c_tmp"@
@end@ // m2c_create_fewer_files
@if $m2c_mark_boundary == 1@
/** START header generated by $RCSfile$ $Revision$ */
@end@
########################################################################
##
/* *********************************************************************
 * GET function declarations
 */

/* *********************************************************************
 * GET Table declarations
 */
@foreach $table table@
@    include m2c_setup_table.m2i@
@    include details-table.m2i@
    /*
     * indexes
     */
@    foreach $node index@
@        include m2c_setup_node.m2i@
@        if $m2c_node_skip_mapping == 0@
    int ${node}_map($m2c_node_map_param);
@        end@ # // skip mapping
@    end@ # index

@    foreach $node nonindex@
@        include m2c_setup_node.m2i@
    int ${node}_get( ${context}_rowreq_ctx *rowreq_ctx, $m2c_node_param_ref );
@    end@ // nonindex

@end@ // table

@if $m2c_mark_boundary == 1@
/** END header generated by $RCSfile$ $Revision$ */
@end@
@if $m2c_create_fewer_files != 1@
@   eval $m2c_tmp = "$name"@
@   eval $name = "${name}_DATA_GET"@
@   include generic-header-bottom.m2i@
@   eval $name = "$m2c_tmp"@
@end@ // m2c_create_fewer_files
######################################################################
@end@ // $m2c_processing_type ne c
######################################################################
######################################################################
######################################################################
@if "$m2c_processing_type" ne 'h'@
@if $m2c_create_fewer_files != 1@
@open ${name}_data_get.c@
/*
 * Note: this file originally auto-generated by mib2c using
 *       version $Revision$ of $RCSfile$ 
 *
 * $$hack:$
 */
@include generic-source-includes.m2i@

@end@ // m2c_create_fewer_files
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
@foreach $table table@
@    include m2c_setup_table.m2i@
@    include details-table.m2i@

@    if ($m2c_data_allocate == 1) && ("$m2c_data_context" ne "generated")@
@        include generic-data-allocate.m2i@
@    end@

##
##   do nodes
##
##// internal only? how to know how to map external?
@    foreach $node index@
@        include m2c_setup_node.m2i@
@        if $m2c_node_skip_mapping == 1@
@           next@
@        end@
@        include details-node.m2i@
@        if $m2c_report_progress == 1@
@           print | |   +-> Processing index $node@
@        end@
@        include generic-value-map-func.m2i@
@    end@ # foreach column

@    foreach $node nonindex@
@        include m2c_setup_node.m2i@
@        include details-node.m2i@
@        if $node.noaccess == 1@
@            next@ # skip to next column
@        end@
@        if $m2c_report_progress == 1@
@           print | |   +-> Processing nonindex $node@
@        end@
@        if $m2c_node_skip_mapping == 0@
@           include generic-value-map-func.m2i@
@        end@
@        include node-get.m2i@
@    end@ # foreach column

@end@ # foreach table

##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
########################################################################
@end@ // $m2c_processing_type ne h
