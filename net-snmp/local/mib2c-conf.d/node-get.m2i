#############################################################  -*- c -*-
## generic include for XXX. Do not use directly.
##
## $Id$
########################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
########################################################################
##
@include m2c_setup_node.m2i@
@eval $m2c_node_realloc = 2@ // malloc
/*
 * ${node}_get
 *
 * Extract the current value of the $node data.
 *
@if $m2c_node_get_comments ne ""@
$m2c_node_get_comments
*
@end@
 * @param ${context}_rowreq_ctx
 *        Pointer to the row request context. You should know how to
 *        manipulate the value from this object.
 * @param ${node}
 *        Pointer to storage for a $node.decl variable
@if $m2c_node_needlength == 1@
 * @param ${node}_len
 *        Pointer to a size_t. On entry, it will contain the size (in bytes)
 *        pointed to by $node.
 *        On exit, this value should contain the data size (in bytes).
 *        If you need more memory, allocate it using malloc(), update the
 *        the $node pointer.
 *        NOTE: DO NOT free the previous pointer.
 *        NOTE: The agent will release the memory you allocate.
 *              If you call this function yourself, you are responsible
 *              for checking if the pointer changed, and freeing the
 *              previous memory.
@end@
 *
 * @return MFD_SUCCESS         : success
 *         MFD_SKIP            : skip this node (no value for now)
 *         MFD_ERROR           : Any other error
 */
int
${node}_get( ${context}_rowreq_ctx *rowreq_ctx, $m2c_node_param_ref )
{
@ifconf syntax-$node.syntax-get.m2i@
@    include syntax-$node.syntax-get.m2i@
@else@
    /** syntax-$node.syntax-get.m2i not found, using generic */
@    include generic-get-decl.m2i@
    netsnmp_assert(NULL != rowreq_ctx);

/*
 * TODO:
@if $m2c_node_needlength == 0@
 * set $m2c_node_lh from $m2c_data_item
@else@
 * set $m2c_node_lh and $m2c_node_lhs from $m2c_data_item
@end@
 */
@    if ("$m2c_data_context" eq "generated") && ($m2c_node_skip_get != 1)@
@        include generic-ctx-get.m2i@
@    else@
    return MFD_SKIP; /* TODO: remove this once you've set data */
@    end@
##   ------------------------------------------------------------------
@    if $node.decl =~ /long/i@ #   ASN_INTEGER ASN_COUNTER ASN_GAUGE
@       include generic-get-long.m2i@
@    elsif $node.decl =~ /char/i@ #         ASN_OCTET_STR ASN_OPAQUE
@       include generic-get-char.m2i@
@    elsif $node.decl =~ /oid/i@ #                    ASN_OBJECT_ID
@       include generic-get-oid.m2i@
@    elsif $node.decl =~ /counter64/i@ #              ASN_COUNTER64
@       include generic-get-counter64.m2i@
@    else@
@        print ERROR: unknown node.decl: $node.decl@
@        exit@
@    end@
##   ------------------------------------------------------------------
@    if ($m2c_node_skip_mapping != 1) && ("$m2c_data_context" ne "generated")@
@        include generic-value-map.m2i@
@    end@
@    include generic-get-decl-bot.m2i@  // copy value out
@end@ # no syntax include

    return SNMP_ERR_NOERROR;
}

##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
