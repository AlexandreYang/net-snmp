########################################################################
## generic include for XXX. Don't use directly.
##
## $Id$
########################################################################
@if $m2c_mark_boundary == 1@
/** START code generated by $RCSfile$ $Revision$ */
@end@
########################################################################
##
/*
 * ${context}_allocate_data
 *
 * Purpose: create new ${table}_data.
 */
${context}_data *
${context}_allocate_data(void)
{
    /*
     * allocate memory for the context
     */
@if $m2c_data_allocate != "generated"@
$example_start
@end@
    ${context}_data *rtn = SNMP_MALLOC_TYPEDEF(${context}_data);
@if $m2c_data_allocate != "generated"@
$example_end
@end@

    DEBUGMSGT(("${name}:trace",">%s\n",__FUNCTION__));

    if(NULL == rtn) {
        snmp_log(LOG_ERR, "unable to malloc memory for new "
                 "${table}_data.\n");
    }

    return rtn;
}

/*
 * ${context}_allocate_data
 *
 * Purpose: release data data.
 */
void
${context}_release_data(${table}_data *data)
{
    DEBUGMSGT(("${name}:trace",">%s\n",__FUNCTION__));

    /*
     * release memory for the context
     */
    free(data);
}

@if @m2c_table_writable == 1@
/*
 * ${context}_create_undo
 *
 * Create an 
 */
int
${context}_create_undo_context( ${context}_ctx *ctx )
{
    int rc;

    DEBUGMSGT(("${name}:trace",">%s\n",__FUNCTION__));

    /** we should have a non-NULL pointer */
    netsnmp_assert( NULL != ctx );

    /*
     * allocate context
     */
    ctx->undo = ${context}_allocate_data();
    if(NULL == ctx->data) {
        /** msg already logged */
        return SNMP_ERR_RESOURCEUNAVAILABLE;
    }

    /*
     * copy the data
     */
@if $m2c_data_allocate != "generated"@
$example_start
@end@
@    foreach $node nonindex@
@        include m2c_setup_node.m2i@
@        eval $m2c_ctx_lh = "ctx->undo"@
@        eval $m2c_ctx_rh = "ctx->data"@
@        include generic-ctx-copy.m2i@
@    end@ # foreach nonindex
@if $m2c_data_allocate != "generated"@
$example_end
@end@

    return SNMP_ERR_NOERROR;
}

@end@

##
########################################################################
@if $m2c_mark_boundary == 1@
/** END code generated by $RCSfile$ $Revision$ */
@end@
