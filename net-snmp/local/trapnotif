#!/bin/sh

PATH=/usr/local/bin/:/usr/support/bin/:/1/OV/bin/:$PATH

# testing
#echo user: `whoami`
#echo group: `id -g -n`

# defaults
CURLOGFILE=/1/OV/log/ece-log
CURLOGLOCKFILE=$CURLOGFILE.lock
TOTLOGFILE=/1/OV/log/ece-log-total
TOTLOGLOCKFILE=$TOTLOGFILE.lock
TMPFILE=/tmp/snmp.tmp.$$
HOSTLISTFILE=/1/OV/ecehosts
HOSTDB=/usr/support/named/host.db

# Variable declarations

TYPE=$1
FULLHOST=$2
HOST=`echo $FULLHOST | sed 's/\.[^.]*\.ucdavis\.edu//'`

# pick only ece/cipic machines

HOSTEXIT=0
case "$FULLHOST" in
  *.ece.ucdavis.edu)   HOSTEXIT=1 ;;
  *.eecs.ucdavis.edu)   HOSTEXIT=1 ;;
  *.cipic.ucdavis.edu) HOSTEXIT=1 ;;
esac

if [ $HOSTEXIT = 0 ]; then
  exit 0
fi

# Log event
echo "`date`\t$1|$2|$3|$4" >> /1/OV/log/trapnotif.log

# function declairations

total_log()
{

  # Generate the Total Log File:  all events

  if [ $TYPE = "up" ]; then
    PROC="up"
  fi

  lockfile $TOTLOGLOCKFILE
  echo "$HOST@$PROC@$ERROR@(`date +'%m/%d %H:%M'`)" | awk -F @ '{ printf("%-8.8s %-12.12s %-42.42s %-13.13s\n",$1,$2,$3,$4);}' >> $TOTLOGFILE
  rm -f $TOTLOGLOCKFILE
  
}

log_error()
{

  # generate CURLOGFILE message (if one doesn't exist all ready)

  if [ `egrep "$HOST[ 	]*$PROC" $CURLOGFILE | wc -l` = 0 ]; then
    lockfile $CURLOGLOCKFILE
    cp $CURLOGFILE $TMPFILE
    echo "$HOST@$PROC@$ERROR@(`date +'%m/%d %H:%M'`)" | awk -F @ '{ printf("%-8.8s %-12.12s %-42.42s %-13.13s\n",$1,$2,$3,$4);}' >> $TMPFILE
    sort $TMPFILE > $CURLOGFILE
    rm -f $TMPFILE $CURLOGLOCKFILE
    total_log
  fi
}

unlog_error()
{
  # remove CURLOGFILE message

  lockfile $CURLOGLOCKFILE
  egrep -v "$HOST[ 	]*$PROC" $CURLOGFILE > $TMPFILE
  mv -f $TMPFILE $CURLOGFILE
  rm -f $CURLOGLOCKFILE
  total_log
}


# Begin Main

# First deal with up/down events

if [ $TYPE = "down" -o $TYPE = "up" ]; then

  # Check to see if it is a unix host
    
  egrep "^$HOST$" $HOSTLISTFILE > /dev/null 2>&1
  
  if [ $? = 1 ]; then
    exit 0
  fi
  
  PROC="down"
  
  if [ $TYPE = "down" ]; then
    
    # Host down notice

    ERROR="$HOST is down"
    if [ `egrep "^$HOST:" $HOSTDB | wc -l` != 0 ]; then
      mark-down $HOST
      log_error
    fi
  else
    
    # Host up notice
    
    ERROR="$HOST is up"
    if [ `egrep "^$HOST:" $HOSTDB | wc -l` != 0 ]; then
      mark-up $HOST
      unlog_error
    fi
  fi
  exit 0
fi

# More Variable declairations for ece-snmpd events

MIBERRFLAG="$4"
MIBLOC=`echo $MIBERRFLAG | sed 's/\.[^.]*$//'`
ERRTABLENO="$3"
MIBPROC=$MIBLOC.2.$ERRTABLENO
MIBERRMSG=$MIBLOC.101.$ERRTABLENO
PROC=`/usr/local/etc/snmpget $FULLHOST ecemgr eceagent ececontext $MIBPROC | sed 's/^.*: *//'`
if [ $PROC = "" ]; then
  PROC="traperr"
fi

# Type determination (error or normal) and ERROR msg setting

if [ $TYPE = "err" ];   then
  
  # The problem is an error
  
  ERROR=`/usr/local/etc/snmpget ecemgr eceagent ececontext $FULLHOST $MIBERRMSG | sed 's/^.*: *//'`
  if [ "$ERROR" = "" ]; then
    ERROR="Error MSG disappeared."
    total_log
  else
    log_error
  fi
  
else

  # A problem has gone away
  
  ERROR="$PROC Returned to normal"
  unlog_error
  
fi


#
# Generate a mail message to 'prog'
#

# Actually Don't
exit 0

/bin/cat << ++ | /usr/lib/sendmail hardaker
To: hardaker
From: $HOST
Snmp: $HOST
Subject: $ERROR
Folder: snmp

Host:          $FULLHOST
Watch Name:    $PROC (# $ERRTABLENO)
Msg:           $ERROR

(debugging stuff below)
args:          $*
               $1:$2:$3:$4

++

