## -*- c -*-
######################################################################
## Do the .h file
######################################################################
@open ${name}_access.h@
/*
 * Note: this file originally auto-generated by mib2c using
 *        $Id$
 */
#ifndef $name.uc_ACCESS_H
#define $name.uc_ACCESS_H

@foreach $t table@
/* User-defined data access functions for data in table $t */
  @foreach $c column@
    @if $c.access =~ /(Read|Create)/@
      $c.decl *get_$c(void *data_context, size_t *ret_len);
    @end@
    @if $c.access =~ /(Write|Create)/@
      int set_$c(void *data_context, $c.decl *val, size_t val_len);
    @end@
  @end@
@end@

#endif /* $name.uc_ACCESS_H */
######################################################################
## Do the .c file
######################################################################
@open ${name}_access.c@

/*
 * Note: this file originally auto-generated by mib2c using
 *        $Id$
 */

#include <net-snmp/net-snmp-config.h>
#include <net-snmp/net-snmp-includes.h>
#include <net-snmp/agent/net-snmp-agent-includes.h>
#include "${name}_access.h"

/* NOTE:
  - these get_ routines MUST return data that will not be freed (ie,
    use static variables or persistent data).  It will be copied, if
    needed, immediately after the get_ routine has been called.
  - these SET routines must copy the incoming data and can not take
    ownership of the memory passed in by the val pointer.
 */

@foreach $t table@
/* User-defined data access functions for data in table $t */
  @foreach $c column@

    @if $c.access =~ /(Read|Create)/@
/** XXX: return a data pointer to the data for the $c column and set
         ret_len to its proper size in bytes. */
      $c.decl *get_$c(void *data_context, size_t *ret_len) {
      return NULL; /** XXX: replace this with a real value */
      }
    @end@
    @if $c.access =~ /(Write|Create)/@
 /** XXX: Set the value of the $c column and return
          SNMPERR_SUCCESS on SNMPERR_GENERR on failure. */
      int set_$c(void *data_context, $c.decl *val, size_t val_len) {
        return SNMP_ERR_NOERROR;  /** XXX: change if an error occurs */
      }
    @end@
  @end@
@end@

