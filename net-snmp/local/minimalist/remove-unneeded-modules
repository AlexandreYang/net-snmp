#!/bin/perl

use File::Find;
use Data::Dumper;
use strict;

my %opts;

LocalGetOptions(\%opts,
		['n|dry-run',      "Dry-run, just say what you would do"],
		['v|verbose',      "Show what files are being left too"],
    );

my $inputMakefile = $ARGV[0] || "agent/mibgroup/Makefile";
my $inputDir = $ARGV[1] || "agent/mibgroup";

my $collecting = 0;
my (%files, @files);

open(I, $inputMakefile);
while(<I>) {
    if (/mib_module_list_c=/) {
	$collecting = 1;
    } elsif ($collecting) {
	if (! /\\\s*$/) {
	    $collecting = 0;
	}
	chomp();
	s/\\//;
	s/\s*//g;
	s/\.c//;
	push @files, "agent/mibgroup/$_";
	$files{"agent/mibgroup/$_.c"} = 1;
	$files{"agent/mibgroup/$_.h"} = 1;
    }
}

find(\&remove_files, $inputDir);

sub remove_files {
    return if (!/\.[ch]$/);
    if (!exists($files{$File::Find::name})) {
	Unlink($File::Find::name);
    } elsif ($opts{'v'}) {
	print "Leaving $File::Find::name\n";
    }
}

sub Unlink {
    my ($file) = @_;
    print "Removing $file\n";
    if (!$opts{'n'}) {
	#unlink($file);
    }
}


sub LocalGetOptions {
    if (eval {require Getopt::GUI::Long;}) {
        import Getopt::GUI::Long;
        # optional configure call
        Getopt::GUI::Long::Configure(qw(display_help no_ignore_case capture_output no_gui allow_zero));
        return GetOptions(@_);
    }
    require Getopt::Long;
    import Getopt::Long;
    # optional configure call
    Getopt::Long::Configure(qw(display_help no_ignore_case capture_output));
    GetOptions(LocalOptionsMap(@_));
}

sub LocalOptionsMap {
    my ($st, $cb, @opts) = ((ref($_[0]) eq 'HASH') 
                            ? (1, 1, $_[0]) : (0, 2));
    for (my $i = $st; $i <= $#_; $i += $cb) {
        if ($_[$i]) {
            next if (ref($_[$i]) eq 'ARRAY' && $_[$i][0] =~ /^GUI:/);
            push @opts, ((ref($_[$i]) eq 'ARRAY') ? $_[$i][0] : $_[$i]);
            push @opts, $_[$i+1] if ($cb == 2);
        }
    }
    return @opts;
}
