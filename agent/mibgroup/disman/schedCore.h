/*
 * Note: this file originally auto-generated by mib2c using
 *  : mib2c.table_data.conf,v 1.3 2004/10/14 12:57:34 dts12 Exp $
 */
#ifndef SCHEDCORE_H
#define SCHEDCORE_H

config_require(utilities/iquery)

    /*
     * Data structure for a schedTable row entry 
     */
struct schedTable_entry {
    /*
     * Index values 
     */
    char            schedOwner[32];
    size_t          schedOwner_len;
    char            schedName[32];
    size_t          schedName_len;

    /*
     * Column values 
     */
    char            schedDescr[256];
    size_t          schedDescr_len;
    char            old_schedDescr[256];
    size_t          old_schedDescr_len;
    u_long          schedInterval;
    u_long          old_schedInterval;
    char            schedWeekDay;
    char            old_schedWeekDay;
    char            schedMonth[3];
    char            old_schedMonth[3];
    char            schedDay[4+4];
    char            old_schedDay[4+4];
    char            schedHour[2];
    char            old_schedHour[2];
    char            schedMinute[8];
    char            old_schedMinute[8];
    char            schedContextName[32];
    size_t          schedContextName_len;
    char            old_schedContextName[32];
    size_t          old_schedContextName_len;
    oid             schedVariable[MAX_OID_LEN];
    size_t          schedVariable_len;
    oid             old_schedVariable[MAX_OID_LEN];
    size_t          old_schedVariable_len;
    long            schedValue;
    long            old_schedValue;

#define SCHED_TYPE_PERIODIC   1
#define SCHED_TYPE_CALENDAR   2
#define SCHED_TYPE_ONESHOT    3

    long            schedType;
    long            old_schedType;
    long            schedAdminStatus;
    long            old_schedAdminStatus;
    long            schedOperStatus;
    u_long          schedFailures;
    long            schedLastFailure;
    time_t          schedLastFailed;
    long            schedStorageType;
    long            old_schedStorageType;
    long            schedRowStatus;
    u_long          schedTriggers;

    time_t          schedLastRun;
    time_t          schedNextRun;
    unsigned int    schedCallbackID;
    netsnmp_session *schedSession;
    int             valid;
};

/*
 * function declarations 
 */
void            init_schedCore(void);

netsnmp_table_row *
schedTable_createEntry(netsnmp_table_data *table_data, char *schedOwner,
                       size_t schedOwner_len, char *schedName,
                       size_t schedName_len, netsnmp_pdu *pdu);
void
schedTable_removeEntry(netsnmp_table_data *table_data, netsnmp_table_row *row);
void  sched_nextTime( struct schedTable_entry *entry );
void  sched_nextRowTime( netsnmp_table_row *row );

#endif                          /* SCHEDCORE_H */
