/*
 * Note: this file originally auto-generated by mib2c using
 *  : generic-table-constants.m2c,v 1.1 2004/02/29 23:01:49 rstory Exp $
 *
 * $Id$
 */
#ifndef IPCIDRROUTETABLE_CONSTANTS_H
#define IPCIDRROUTETABLE_CONSTANTS_H

#ifdef __cplusplus
extern          "C" {
#endif


    /*
     * column number definitions for table ipCidrRouteTable 
     */
#define IPCIDRROUTETABLE_OID              1,3,6,1,2,1,4,24,4
#define COLUMN_IPCIDRROUTEDEST		1
#define COLUMN_IPCIDRROUTEMASK		2
#define COLUMN_IPCIDRROUTETOS		3
#define COLUMN_IPCIDRROUTENEXTHOP		4
#define COLUMN_IPCIDRROUTEIFINDEX		5
#define COLUMN_IPCIDRROUTETYPE		6
#define COLUMN_IPCIDRROUTEPROTO		7
#define COLUMN_IPCIDRROUTEAGE		8
#define COLUMN_IPCIDRROUTEINFO		9
#define COLUMN_IPCIDRROUTENEXTHOPAS		10
#define COLUMN_IPCIDRROUTEMETRIC1		11
#define COLUMN_IPCIDRROUTEMETRIC2		12
#define COLUMN_IPCIDRROUTEMETRIC3		13
#define COLUMN_IPCIDRROUTEMETRIC4		14
#define COLUMN_IPCIDRROUTEMETRIC5		15
#define COLUMN_IPCIDRROUTESTATUS		16

#define IPCIDRROUTETABLE_MIN_COL		COLUMN_IPCIDRROUTEDEST
#define IPCIDRROUTETABLE_MAX_COL		COLUMN_IPCIDRROUTESTATUS


    /*
     * NOTES on emus
     * =============
     *
     * Value Mapping
     * -------------
     * If the values for your data type don't exactly match the
     * possible values defined by the mib, you should map them
     * below. For example, a boolean flag (1/0) is usually represented
     * as a TruthValue in a MIB, which maps to the values (1/2).
     *
     */

/*************************************************************************
 *************************************************************************
 *
 * enum definitions for table ipCidrRouteTable
 *
 *************************************************************************
 *************************************************************************/

/*************************************************************
 * constants for enums for the MIB node
 * ipCidrRouteType (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redifinitions of the enum values.
 */
#ifndef ipCidrRouteType_ENUMS
#define ipCidrRouteType_ENUMS

#define IPCIDRROUTETYPE_OTHER  1
#define IPCIDRROUTETYPE_REJECT  2
#define IPCIDRROUTETYPE_LOCAL  3
#define IPCIDRROUTETYPE_REMOTE  4


#endif                          /* ipCidrRouteType_ENUMS */

    /*
     * TODO:
     * value mapping (set notes at top of file)
     */
#define INTERNAL_IPCIDRROUTETYPE_OTHER  1
#define INTERNAL_IPCIDRROUTETYPE_REJECT  2
#define INTERNAL_IPCIDRROUTETYPE_LOCAL  3
#define INTERNAL_IPCIDRROUTETYPE_REMOTE  4

/*************************************************************
 * constants for enums for the MIB node
 * ipCidrRouteProto (INTEGER / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redifinitions of the enum values.
 */
#ifndef ipCidrRouteProto_ENUMS
#define ipCidrRouteProto_ENUMS

#define IPCIDRROUTEPROTO_OTHER  1
#define IPCIDRROUTEPROTO_LOCAL  2
#define IPCIDRROUTEPROTO_NETMGMT  3
#define IPCIDRROUTEPROTO_ICMP  4
#define IPCIDRROUTEPROTO_EGP  5
#define IPCIDRROUTEPROTO_GGP  6
#define IPCIDRROUTEPROTO_HELLO  7
#define IPCIDRROUTEPROTO_RIP  8
#define IPCIDRROUTEPROTO_ISIS  9
#define IPCIDRROUTEPROTO_ESIS  10
#define IPCIDRROUTEPROTO_CISCOIGRP  11
#define IPCIDRROUTEPROTO_BBNSPFIGP  12
#define IPCIDRROUTEPROTO_OSPF  13
#define IPCIDRROUTEPROTO_BGP  14
#define IPCIDRROUTEPROTO_IDPR  15
#define IPCIDRROUTEPROTO_CISCOEIGRP  16


#endif                          /* ipCidrRouteProto_ENUMS */

    /*
     * TODO:
     * value mapping (set notes at top of file)
     */
#define INTERNAL_IPCIDRROUTEPROTO_OTHER  1
#define INTERNAL_IPCIDRROUTEPROTO_LOCAL  2
#define INTERNAL_IPCIDRROUTEPROTO_NETMGMT  3
#define INTERNAL_IPCIDRROUTEPROTO_ICMP  4
#define INTERNAL_IPCIDRROUTEPROTO_EGP  5
#define INTERNAL_IPCIDRROUTEPROTO_GGP  6
#define INTERNAL_IPCIDRROUTEPROTO_HELLO  7
#define INTERNAL_IPCIDRROUTEPROTO_RIP  8
#define INTERNAL_IPCIDRROUTEPROTO_ISIS  9
#define INTERNAL_IPCIDRROUTEPROTO_ESIS  10
#define INTERNAL_IPCIDRROUTEPROTO_CISCOIGRP  11
#define INTERNAL_IPCIDRROUTEPROTO_BBNSPFIGP  12
#define INTERNAL_IPCIDRROUTEPROTO_OSPF  13
#define INTERNAL_IPCIDRROUTEPROTO_BGP  14
#define INTERNAL_IPCIDRROUTEPROTO_IDPR  15
#define INTERNAL_IPCIDRROUTEPROTO_CISCOEIGRP  16

/*************************************************************
 * constants for enums for the MIB node
 * ipCidrRouteStatus (RowStatus / ASN_INTEGER)
 *
 * since a Textual Convention may be referenced more than once in a
 * MIB, protect againt redifinitions of the enum values.
 */
#ifndef RowStatus_ENUMS
#define RowStatus_ENUMS

#define ROWSTATUS_ACTIVE  1
#define ROWSTATUS_NOTINSERVICE  2
#define ROWSTATUS_NOTREADY  3
#define ROWSTATUS_CREATEANDGO  4
#define ROWSTATUS_CREATEANDWAIT  5
#define ROWSTATUS_DESTROY  6


#endif                          /* RowStatus_ENUMS */

    /*
     * TODO:
     * value mapping (set notes at top of file)
     */
#define INTERNAL_IPCIDRROUTESTATUS_ACTIVE  1
#define INTERNAL_IPCIDRROUTESTATUS_NOTINSERVICE  2
#define INTERNAL_IPCIDRROUTESTATUS_NOTREADY  3
#define INTERNAL_IPCIDRROUTESTATUS_CREATEANDGO  4
#define INTERNAL_IPCIDRROUTESTATUS_CREATEANDWAIT  5
#define INTERNAL_IPCIDRROUTESTATUS_DESTROY  6




#ifdef __cplusplus
};
#endif

#endif                          /* IPCIDRROUTETABLE_OIDS_H */
