#----------------------------------------------------------------------
# $Id$
# Author: Robert Story <rstory@freesnmp.com>

#----------------------------------------------------------------------
#
# Utility vars
#
NSB_QUIET=0
NSB_PROMPT=1
NSB_CLEAN=1
NSB_SKIP_CONFIG=0
NSB_VIEW=cat
DATE=`date +%y%m%d_%k%M`

#----------------------------------------------------------------------
#
# Utility functions
#

nsb-info()
{
   if [ $NSB_QUIET -ne 1 ]; then
      echo $@
   fi
}

nsb-prompt()
{
   if [ $NSB_PROMPT -eq 1 ]; then
      echo $@
      read nsb_prompt_dummy
   else
      echo "$@ (PROMPT SKIPPED)"
   fi
}

#----------------------------------------------------------------------
#
nsb-get-config()
{
   if [ $# -ne 2 ]; then
      echo "usage: $0 release src_dir dest_dir"
      exit
   fi
   ngc_src=$1
   ngc_inst=$2
   echo $ngc_src/configure --prefix=$ngc_inst --with-sys-location=Location \
      --with-sys-contact='System Administrator' --disable-privacy \
      --with-defaults --with-mib-modules='host disman/event-mib'
   $ngc_src/configure --prefix=$ngc_inst --with-sys-location=Location \
      --with-sys-contact='System Administrator' --disable-privacy \
      --with-defaults --with-mib-modules='host disman/event-mib'
}

nsb-sysname()
{
   echo `uname -mrs | tr ' ' _`
}

nsb-zip()
{
   if [ $# -ne 3 ]; then
      echo "usage: $0 release build_directory dest_dir"
      exit
   fi

   release=$1
   build_dir=$2
   dest_dir=$3

   platform=`nsb-sysname`
   build=$build_dir/$platform

   if [ ! -d $build ]; then
      echo "$build directory does not exist!"
      exit;
   fi

   if [ ! -d $build/usr ]; then
      echo "install directory $build/usr directory does not exist!"
      exit;
   fi

   cd $build

   rm -f $dest_dir/$release-$platform.tar
   nsb-info "tar cf $dest_dir/$release-$platform.tar usr"
   tar cf $dest_dir/$release-$platform.tar usr

   nsb-info "gzip --best $dest_dir/$release-$platform.tar"
   gzip --best $dest_dir/$release-$platform.tar

   if [ $NSB_QUIET -ne 1 ]; then
      ls -lt $dest_dir
   fi
}

nsb-build()
{
   if [ $# -ne 4 ]; then
      echo "usage: $0 release src_dir build_directory dest_dir"
      exit
   fi

   release=$1
   src_dir=$2
   build_dir=$3
   dest_dir=$4

   if [ ! -d $src_dir ]; then
      echo "$src_dir does not exist!"
      exit
   fi

   if [ ! -d $build_dir ]; then
      mkdir $build_dir
      if [ ! -d $build_dir ]; then
         echo "$build_dir directory does not exist!"
         exit;
      fi
   fi

   nsb-info "Changing directories to $build_dir"
   cd $build_dir

   if [ $NSB_CLEAN -eq 1 ]; then
      nsb-info "Cleaning up..."
      rm -fR nsb-out-* `pwd`/usr/local 2>&1 > /dev/null
      if [ -f Makefile ]; then
         make distclean
      fi
   fi

   if [ $NSB_SKIP_CONFIG -ne 1 ]; then
      nsb-info "Configuring... (log is nsb-out-config.$DATE)"
      nsb-get-config $src_dir $dest_dir | tee nsb-out-config.$DATE
      nsb-prompt "press enter to continue"
   fi

   OUTPUT=nsb-out-make.$DATE
   nsb-info "Building... (log is $OUTPUT)"
   make 2>&1 test | tee $OUTPUT

   nsb-info "Checking for errors..."
   egrep "Error|FAIL|warn|No |exists" $OUTPUT > nsb-out-allerrs.$DATE
   egrep -v "^/usr" nsb-out-allerrs.$DATE > nsb-out-nerrs.$DATE
   egrep -v "warn" nsb-out-nerrs.$DATE > nsb-out-errs.$DATE
   nsb_rc=$?
   if [ $nsb_rc -eq 0 ]; then
      nsb-prompt "press enter to view errors"
      $NSB_VIEW nsb-out-nerrs.$DATE
   else
      nsb-prompt "No errors found, press enter to install"
      ## full build with install. usr subdir will be available to package
      make install prefix=`pwd`/usr/local exec_prefix=`pwd`/usr/local | tee -a $OUTPUT
   fi
}
